// Generated by view binder compiler. Do not edit!
package com.inforcap.desafiocertificacionlatam.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.inforcap.desafiocertificacionlatam.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayoutDetail;

  @NonNull
  public final AppCompatImageView imageViewStore;

  @NonNull
  public final NestedScrollView scrollViewDetail;

  @NonNull
  public final AppCompatTextView textViewStoreAddress;

  @NonNull
  public final AppCompatTextView textViewStoreHistory;

  @NonNull
  public final AppCompatTextView textViewStoreName;

  @NonNull
  public final AppCompatTextView textViewStoreOfficeHours;

  private ActivityDetailsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayoutDetail, @NonNull AppCompatImageView imageViewStore,
      @NonNull NestedScrollView scrollViewDetail, @NonNull AppCompatTextView textViewStoreAddress,
      @NonNull AppCompatTextView textViewStoreHistory, @NonNull AppCompatTextView textViewStoreName,
      @NonNull AppCompatTextView textViewStoreOfficeHours) {
    this.rootView = rootView;
    this.constraintLayoutDetail = constraintLayoutDetail;
    this.imageViewStore = imageViewStore;
    this.scrollViewDetail = scrollViewDetail;
    this.textViewStoreAddress = textViewStoreAddress;
    this.textViewStoreHistory = textViewStoreHistory;
    this.textViewStoreName = textViewStoreName;
    this.textViewStoreOfficeHours = textViewStoreOfficeHours;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayoutDetail;
      ConstraintLayout constraintLayoutDetail = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayoutDetail == null) {
        break missingId;
      }

      id = R.id.imageViewStore;
      AppCompatImageView imageViewStore = ViewBindings.findChildViewById(rootView, id);
      if (imageViewStore == null) {
        break missingId;
      }

      id = R.id.scrollViewDetail;
      NestedScrollView scrollViewDetail = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewDetail == null) {
        break missingId;
      }

      id = R.id.textViewStoreAddress;
      AppCompatTextView textViewStoreAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewStoreAddress == null) {
        break missingId;
      }

      id = R.id.textViewStoreHistory;
      AppCompatTextView textViewStoreHistory = ViewBindings.findChildViewById(rootView, id);
      if (textViewStoreHistory == null) {
        break missingId;
      }

      id = R.id.textViewStoreName;
      AppCompatTextView textViewStoreName = ViewBindings.findChildViewById(rootView, id);
      if (textViewStoreName == null) {
        break missingId;
      }

      id = R.id.textViewStoreOfficeHours;
      AppCompatTextView textViewStoreOfficeHours = ViewBindings.findChildViewById(rootView, id);
      if (textViewStoreOfficeHours == null) {
        break missingId;
      }

      return new ActivityDetailsBinding((ConstraintLayout) rootView, constraintLayoutDetail,
          imageViewStore, scrollViewDetail, textViewStoreAddress, textViewStoreHistory,
          textViewStoreName, textViewStoreOfficeHours);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
